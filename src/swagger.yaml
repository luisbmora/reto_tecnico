openapi: 3.0.0
info:
  title: API de Usuarios y Empresas
  description: API para la gestión de usuarios y empresas
  version: 1.0.0
servers:
  - url: http://localhost:3000/api-docs
    description: Servidor local de desarrollo
paths:
  /users/run/seeds:
    get:
      summary: "Ejectua los seeders para la base de datos de usuarios"
      description: "Este endpoint ejecuta los seeders para crear datos de ejemplo en la base de datos."
      responses:
        '200':
          description: "Seeders ejecutados correctamente."
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: "Seeders ejecutados correctamente."
        '500':
          description: "Error interno del servidor."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error interno del servidor."
      tags:
        - "Seeds"
  /users:
    get:
      summary: Obtener todos los usuarios
      description: Devuelve una lista de todos los usuarios.
      tags:
        - User
      security:
        - bearerAuth: []  # Requiere autenticación
      responses:
        '200':
          description: Lista de usuarios obtenida correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: No autorizado. El usuario no está autenticado.

    post:
      summary: Crear un nuevo usuario
      description: Permite la creación de un nuevo usuario.
      tags:
        - User
      security:
        - bearerAuth: []  # Aplica el esquema de seguridad
      requestBody:
        description: Datos para crear un nuevo usuario
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuario creado correctamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Datos inválidos.


  /users/login:
    post:
      summary: Iniciar sesión
      description: Permite al usuario iniciar sesión proporcionando las credenciales.
      tags:
        - User
      requestBody:
        description: Credenciales del usuario para iniciar sesión
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "usuario@ejemplo.com"
                password:
                  type: string
                  example: "contraseña123"
      responses:
        '200':
          description: Inicio de sesión exitoso, devuelve el token de autenticación.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Credenciales inválidas.

  /enterprise:
    get:
      summary: Obtener todas las empresas
      description: Devuelve una lista de todas las empresas.
      tags:
        - Enterprise
      security:
        - bearerAuth: []  # Requiere autenticación
      responses:
        '200':
          description: Lista de empresas obtenida correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Enterprise'
        '401':
          description: No autorizado. El usuario no está autenticado.

    post:
      summary: Crear una nueva empresa
      description: Permite la creación de una nueva empresa.
      tags:
        - Enterprise
      security:
        - bearerAuth: []  # Requiere autenticación
      requestBody:
        description: Datos para crear una nueva empresa
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enterprise'
      responses:
        '201':
          description: Empresa creada correctamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
        '400':
          description: Datos inválidos.

  

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: ID único del usuario
          example: 1
        name:
          type: string
          description: Nombre del usuario
          example: "John Doe"
        email:
          type: string
          description: Correo electrónico del usuario
          example: "john.doe@example.com"
        password:
          type: string
          description: Contraseña del usuario
          example: "contraseña123"
        isActive:
          type: boolean
          description: Estado activo del usuario
          example: true

    Enterprise:
      type: object
      properties:
        id:
          type: integer
          description: ID único de la empresa
          example: 1
        name:
          type: string
          description: Nombre de la empresa
          example: "Empresa ABC"
        date:
          type: string
          format: date
          description: Fecha de creación de la empresa
          example: "2024-09-23"
        type:
          type: string
          description: Tipo de empresa
          example: "Tecnología"
        comments:
          type: string
          description: Comentarios sobre la empresa
          example: "Empresa líder en innovación"
        favorite:
          type: string
          description: Indicador de empresa favorita
          example: "true"

  securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
